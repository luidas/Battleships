'use strict';

/**
 * Run a function 'f' only once, if an extra 'msg' argument is given,
 * it will print a warn message while be invoked more than once.
 *
 * Examples:
 *
 *     var callbackOnce = once(callback);
 *     var callbackOnce2 = once(callback, 'invoked more than once');
 *     var callbackOnce3 = once(callback, 'invoked the %drd times');
 *
 * @param {function} f - function to call
 * @param {string} [msg] - optional message to console.warn when f called more than one time
 * @return {function} - a function only in action on the first call
 */

function once(f, msg, logger) {
    let called = 0;
    return function newFn(...args) {
        called += 1;
        if (called > 1) {
            if (msg) {
                (logger || console).warn(msg, called);
            }
            return;
        }
        f(...args);
    };
}

module.exports = once;
